@namespace TextileEditor.Web.Layout
@using System.Globalization
@using TextileEditor.Web.Services
@inject ILanguageStorageService LanguageStorage

<FluentButton id="OptionMenuOpen" Disabled="open" Appearance="Appearance.Stealth" @onclick="@(() => open = !open)">
    Options
</FluentButton>

<FluentMenu Anchor="OptionMenuOpen" @bind-Open="open" VerticalThreshold="170">
    <FluentMenuItem Label="Theme">
        <MenuItems>
            <FluentMenuItem Label="Mode">
                <MenuItems>
                    @foreach (var theme in Enum.GetValues<DesignThemeModes>())
                    {
                        <FluentMenuItem Role="MenuItemRole.MenuItemRadio" Checked="@(theme == Mode)" OnClick="@(e => Mode = theme)">@theme.ToString()</FluentMenuItem>
                    }
                </MenuItems>
            </FluentMenuItem>
            <FluentMenuItem Label="Color">
                <MenuItems>
                    @foreach (var theme in Enum.GetValues<OfficeColor>())
                    {
                        <FluentMenuItem Role="MenuItemRole.MenuItemRadio" Checked="@(theme == OfficeColor)" OnClick="@(e => OfficeColor = theme)">
                            <FluentStack>
                                <FluentIcon Value="@(new Icons.Filled.Size20.RectangleLandscape())"
                                            Color="Color.Custom"
                                            CustomColor="@(theme.ToAttributeValue() != "default" ? theme.ToAttributeValue() : "#036ac4" )" />
                                <FluentLabel>@theme.ToString()</FluentLabel>
                            </FluentStack>
                        </FluentMenuItem>
                    }
                </MenuItems>
            </FluentMenuItem>
        </MenuItems>
    </FluentMenuItem>
</FluentMenu>

<FluentDesignTheme @bind-Mode="@Mode"
                   @bind-OfficeColor="@OfficeColor"
                   StorageName="theme" />

@code {
    bool open = false;

    public DesignThemeModes Mode { get; set; }
    public OfficeColor? OfficeColor { get; set; }
}
